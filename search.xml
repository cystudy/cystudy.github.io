<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[渣渣管理员的禁言套餐]]></title>
      <url>https://cystudy.github.io/2016/09/30/%E6%B8%A3%E6%B8%A3%E7%AE%A1%E7%90%86%E5%91%98%E7%9A%84%E7%A6%81%E8%A8%80%E5%A5%97%E9%A4%90/</url>
      <content type="html"><![CDATA[<img src="/2016/09/30/渣渣管理员的禁言套餐/pic.jpg" alt="禁言套餐" title="禁言套餐">
<p>渣渣管理员，给劳资来个</p>
<p>$$<br>\lim_{n \to + \infty} {<br>  \sum_{k = 1}^{n} {<br>    \frac{<br>      (n^2 \phi(k) \arcsin{\sqrt{\frac{k}{n}}})<br>      \sum_{i = 1}^{k} {<br>        \frac{1}{\sin^2 {\frac{(2 i - 1) \pi}{4 k + 2}}}<br>      }<br>    }{<br>      2(k + 1)(k^5 - 2 n k^4 + 2 n^2 k^3 - n^3 k^2 + n^4 k)<br>    }<br>  }<br>} \tag{1}<br>$$</p>
<p>其中 $\phi(k)$ 是指不超过 $k$ 且与 $k$ 互质的正整数个数（欧拉函数）</p>
<p>分钟禁言套餐。</p>
<p>这么嚣张真是不禁言都不行啊，那么问题来了，管理员应该禁他多少分钟呢？</p>
<a id="more"></a>
<p>首先研究得到：</p>
<p>$$<br>\sum_{i = 1}^{k}{\frac{1}{<br>  \sin^2 {\frac{(2 i - 1) \pi}{4 k + 2}}<br>}} = 2 k (k + 1), (k \ge 0) \tag{2}<br>$$</p>
<blockquote>
<p>这个式子还有很多的变种，可以另写一篇文章专门论述。</p>
</blockquote>
<p>然后事情就变得很有趣了，用 $(2)$ 化简 $(1)$：</p>
<p>$$<br>\lim_{n \to + \infty} {<br>  \sum_{k = 1}^{n} {<br>    \frac{<br>      n^2 \phi(k) \arcsin{\sqrt{\frac{k}{n}}}<br>    }{<br>      k^4 - 2 n k^3 + 2 n^2 k^2 - n^3 k + n^4<br>    }<br>  }<br>} \tag{3}<br>$$<br>现在可以看到 $\frac{k}{n}$ 这个模式出现地比较频繁，可以提取出来，不妨设$x = \frac{k}{n}$：<br>$$<br>\lim_{n \to + \infty} {<br>  \frac{1}{n^2}<br>  \sum_{x = \frac{k}{n} = \frac{1}{n}}^{1} {<br>    \frac{<br>      \phi(x n) \arcsin{\sqrt{x}}<br>    }{<br>      x^4 - 2 x^3 + 2 x^2 - x + 1<br>    }<br>  }<br>} \tag{4}<br>$$<br>如果 $\sum$ 内部只有 $x$ 变量，似乎按照微积分的定义就可以解决了，但中间欧拉函数 $\phi(x n)$ 还是不好处理的，但根据欧拉函数的定义能够简单地将其放大到一次函数。</p>
<p>另外，由于 $x^4 - 2 x^3 + 2 x^2 - x + 1 = ((x - \frac{1}{2})^2 + \frac{1}{4})^2 + \frac{25}{16} &gt; 0$ 与 $x \in [0, 1] \to \arcsin{\sqrt{x}} \in [0, \frac{\pi}{2}]$ 下面的放缩方向是正确的。</p>
<p>$$<br>\begin{align}<br>\lim_{n \to + \infty} {<br>  \frac{1}{n^2}<br>  \sum_{x = \frac{k}{n} = \frac{1}{n}}^{1} {<br>    \frac{<br>      \phi(x n) \arcsin{\sqrt{x}}<br>    }{<br>      x^4 - 2 x^3 + 2 x^2 - x + 1<br>    }<br>  }<br>}<br>&amp; &lt;<br>\lim_{n \to + \infty} {<br>  \frac{1}{n^2}<br>  \sum_{x = \frac{k}{n} = \frac{1}{n}}^{1} {<br>    \frac{<br>      x n \arcsin{\sqrt{x}}<br>    }{<br>      x^4 - 2 x^3 + 2 x^2 - x + 1<br>    }<br>  }<br>} \\<br>&amp; =<br>\lim_{n \to + \infty} {<br>  \frac{1}{n}<br>  \sum_{x = \frac{k}{n} = \frac{1}{n}}^{1} {<br>    \frac{<br>      x \arcsin{\sqrt{x}}<br>    }{<br>      x^4 - 2 x^3 + 2 x^2 - x + 1<br>    }<br>  }<br>} \\<br>&amp; = \int_0^1 {<br>  \frac{<br>    x \arcsin{\sqrt{x}}<br>  }{<br>    x^4 - 2 x^3 + 2 x^2 - x + 1<br>  } \mathrm{d}x<br>} \\<br>&amp; = 0.561893<br>\end{align}<br>$$</p>
<p>至此我们能得到一个上界 $0.561893$。</p>
<p>这个问题可能还有进一步研究的可能，有兴趣的可以继续研究。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[极限计算收录]]></title>
      <url>https://cystudy.github.io/2016/09/11/%E6%9E%81%E9%99%90%E8%AE%A1%E7%AE%97%E6%94%B6%E5%BD%95/</url>
      <content type="html"><![CDATA[<p>收录几则被问过的极限式的求法。<br><a id="more"></a></p>
<h2 id="1"><a href="#1" class="headerlink" title="#1"></a>#1</h2><p>$$<br>\lim_{n \to \infty} {\sqrt[n]{3 + \cos n}}<br>$$</p>
<blockquote>
<p>观察到 $\cos n$ 的取值并没有一个稳定的值，考虑直接放缩到最值然后利用夹逼法来计算。</p>
</blockquote>
<p>$$<br>\begin{align}<br>\lim_{n \to \infty} {\sqrt[n]{3 + \cos n}}<br>    &amp; \in [<br>        \lim_{n \to \infty} {\sqrt[n]{2}},<br>        \lim_{n \to \infty} {\sqrt[n]{4}}<br>    ] \\<br>    &amp; = [1, 1] \\<br>    &amp; = 1<br>\end{align}<br>$$</p>
<h2 id="2"><a href="#2" class="headerlink" title="#2"></a>#2</h2><p>$$<br>\lim_{n \to \infty} {(1 + \frac{1}{n + 2})^n}<br>$$</p>
<blockquote>
<p>考虑到与 $e$ 的定义式比较相近，尝试使用定义式求解</p>
</blockquote>
<p>$$<br>\begin{align}<br>\lim_{n \to \infty} {(1 + \frac{1}{n + 2})^n}<br>    &amp; =<br>    \lim_{n \to \infty} {<br>        \frac{<br>            (1 + \frac{1}{n + 2})^{n + 2}<br>        }{<br>            (1 + \frac{1}{n + 2})^{2}<br>        }<br>    } \\<br>    &amp; =<br>    \frac{<br>        \lim_{n \to \infty} {<br>            (1 + \frac{1}{n + 2})^{n + 2}<br>        }<br>    }{<br>        \lim_{n \to \infty} {<br>            (1 + \frac{1}{n + 2})^{2}<br>        }<br>    } &amp; \text{L. Hospital’s law} \\<br>    &amp; = \frac{e}{1} = e<br>\end{align}<br>$$</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[行列式恒等式-提取公因式]]></title>
      <url>https://cystudy.github.io/2016/09/11/%E8%A1%8C%E5%88%97%E5%BC%8F%E6%81%92%E7%AD%89%E5%BC%8F-%E6%8F%90%E5%8F%96%E5%85%AC%E5%9B%A0%E5%BC%8F/</url>
      <content type="html"><![CDATA[<p>$$<br>\begin{vmatrix}<br>a_1 + b_1 x &amp; a_1 x + b_1 &amp; c_1 \\<br>a_2 + b_2 x &amp; a_2 x + b_2 &amp; c_2 \\<br>a_3 + b_3 x &amp; a_3 x + b_3 &amp; c_3 \\<br>\end{vmatrix}<br>=<br>(1 - x^2)<br>\begin{vmatrix}<br>a_1 &amp; b_1 &amp; c_1 \\<br>a_2 &amp; b_2 &amp; c_2 \\<br>a_3 &amp; b_3 &amp; c_3 \\<br>\end{vmatrix}<br>$$</p>
<p>这个公式的证明需要构造一个公因式并提取出来。</p>
<a id="more"></a>
<p>证明：</p>
<p>$$<br>\begin{align}<br>  \begin{vmatrix}<br>  a_1 + b_1 x &amp; a_1 x + b_1 &amp; c_1 \\<br>  a_2 + b_2 x &amp; a_2 x + b_2 &amp; c_2 \\<br>  a_3 + b_3 x &amp; a_3 x + b_3 &amp; c_3 \\<br>  \end{vmatrix}<br>  &amp; =<br>  \frac{1}{2}<br>  \begin{vmatrix}<br>  (a_1 - b_1)(1 - x) &amp; (a_1 + b_1)(1 + x) &amp; c_1 \\<br>  (a_2 - b_2)(1 - x) &amp; (a_2 + b_2)(1 + x) &amp; c_2 \\<br>  (a_3 - b_3)(1 - x) &amp; (a_3 + b_3)(1 + x) &amp; c_3 \\<br>  \end{vmatrix}<br>  &amp;<br>  \begin{cases}<br>  c_1 := c_1 - c_2 \\<br>  c_2 := c_1 + c_2<br>  \end{cases}<br>  \\<br>  &amp; =<br>  \frac{(1 - x)(1 + x)}{2}<br>  \begin{vmatrix}<br>  a_1 - b_1 &amp; a_1 + b_1 &amp; c_1 \\<br>  a_2 - b_2 &amp; a_2 + b_2 &amp; c_2 \\<br>  a_3 - b_3 &amp; a_3 + b_3 &amp; c_3 \\<br>  \end{vmatrix} \\<br>  &amp; =<br>  \frac{(1 - x^2)}{4}<br>  \begin{vmatrix}<br>  2 a_1 &amp; 2 b_1 &amp; c_1 \\<br>  2 a_2 &amp; 2 b_2 &amp; c_2 \\<br>  2 a_3 &amp; 2 b_3 &amp; c_3 \\<br>  \end{vmatrix}<br>  &amp;<br>  \begin{cases}<br>  c_1 :=c_1 + c_2 \\<br>  c_2 :=c_2 - c_1<br>  \end{cases}<br>  \\<br>  &amp; =<br>  (1 - x^2)<br>  \begin{vmatrix}<br>  a_1 &amp; b_1 &amp; c_1 \\<br>  a_2 &amp; b_2 &amp; c_2 \\<br>  a_3 &amp; b_3 &amp; c_3 \\<br>  \end{vmatrix}<br>\end{align}<br>$$</p>
<p>证毕。</p>
<blockquote>
<p>注意中间有一步同时变换将使得行列式增大一倍，因此添加了 $\frac{1}{2}$ 使得等式成立。</p>
</blockquote>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[高数习题集推荐]]></title>
      <url>https://cystudy.github.io/2016/09/11/%E9%AB%98%E6%95%B0%E4%B9%A0%E9%A2%98%E9%9B%86%E6%8E%A8%E8%8D%90/</url>
      <content type="html"><![CDATA[<p>说起高等数学、数学分析的习题教辅，大家都会首推吉米多维奇习题集。</p>
<img src="/2016/09/11/高数习题集推荐/jimiduoweiqi.jpg" alt="《吉米多维奇数学分析习题集》 山东科学技术出版社" title="《吉米多维奇数学分析习题集》 山东科学技术出版社">
<p>并且大家还会有这本书很难，不可能刷完的印象，也不知是从何处听说。</p>
<p>这个理解是有些偏差的。</p>
<a id="more"></a>
<h2 id="内容设置"><a href="#内容设置" class="headerlink" title="内容设置"></a>内容设置</h2><p>此套书难度梯度设置地不错，按内容分为6册：</p>
<ol>
<li>一元微分</li>
<li>一元积分</li>
<li>多重微分</li>
<li>多重积分</li>
<li>无穷级数</li>
<li>微分方程</li>
</ol>
<p>每册书的开始都是一些比较简单的问题，并且有完整的过程。</p>
<p>慢慢地习题的难度会逐渐攀升至<strong>不可做</strong>级别，因此就会有这套书做完很难的印象。</p>
<p><del>比课后习题及配套答案不知道高到哪里去了</del></p>
<h2 id="攻略提示"><a href="#攻略提示" class="headerlink" title="攻略提示"></a>攻略提示</h2><p>先给自己定一个能达到的小目标，比如：</p>
<p><del>一学期把吉米多维奇习题集刷完</del></p>
<p><strong>新手不要想着把吉米多维奇刷完！</strong></p>
<blockquote>
<p>对于数学系以及对数学分析要求较高的学科，自有老师会 <del>强迫</del> 安利这套书。</p>
</blockquote>
<p>由于题目难度梯度设置比较合理，因此按照顺序刷题是比较合适的。</p>
<p>可以小幅度跳题，但不适合随机做题。</p>
<ol>
<li>从第一册开始</li>
<li>从头开始向后刷没有理解的习题直到 刷不动 / 不想刷 为止</li>
<li>跳到下一册，重复步骤2</li>
</ol>
<p>记住：力所能及即可，要求不要太高。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Hello, 学粉们]]></title>
      <url>https://cystudy.github.io/2016/09/09/hello-xuefens/</url>
      <content type="html"><![CDATA[<p>欢迎来到 CyStudy <strong>仲英学业辅导中心</strong>！</p>
<p>这里有来自各个专业的数十名志愿者与工作人员热心为您服务！</p>
<a id="more"></a>
<h1 id="答疑科目"><a href="#答疑科目" class="headerlink" title="答疑科目"></a>答疑科目</h1><p>下面简单介绍一下我们答疑的科目。</p>
<h2 id="高等数学"><a href="#高等数学" class="headerlink" title="高等数学"></a>高等数学</h2><p>高等数学主要研究<strong>微积分</strong>。</p>
<blockquote>
<p>牛顿-莱布尼茨公式 (Newton-Leibniz formula)</p>
<p>——微积分基本定理</p>
</blockquote>
<p>$$<br>\int_a^b f(x)  \mathrm{d}x = F(b) - F(a)<br>$$</p>
<h2 id="线性代数"><a href="#线性代数" class="headerlink" title="线性代数"></a>线性代数</h2><p>线性代数主要研究<strong>矩阵</strong>、<strong>行列式</strong>的运算与性质。</p>
<blockquote>
<p>范德蒙德行列式 (Vandermonde determinant)</p>
</blockquote>
<p>$$<br>V_n =<br>\begin{vmatrix}<br>1 &amp; x_1 &amp; \cdots &amp; x_1^{n-1} \\<br>1 &amp; x_2 &amp; \cdots &amp; x_2^{n-1} \\<br>\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\<br>1 &amp; x_{n} &amp; \cdots &amp; x_n^{n-1}<br>\end{vmatrix} = \prod_{1\le i \lt j \le n}{(x_i-x_j)}<br>$$</p>
<h2 id="大学物理"><a href="#大学物理" class="headerlink" title="大学物理"></a>大学物理</h2><p>大学物理涉及运动力学、热力学、电磁学、量子力学、狭义相对论等。</p>
<blockquote>
<p>麦克斯韦方程组 (Maxwell equations)</p>
</blockquote>
<p>$$<br>\begin{cases}<br>\nabla\cdot\vec{E} &amp; = &amp; \frac{\rho}{\epsilon_0} \\<br>\nabla\cdot\vec{B} &amp; = &amp; 0 \\<br>\nabla\times\vec{E} &amp; = &amp; -\frac{\partial B}{\partial t} \\<br>\nabla\times\vec{B} &amp; = &amp; \mu_0\left(\vec{J}+\epsilon_0\frac{\partial E}{\partial t} \right)<br>\end{cases}<br>$$</p>
<h2 id="程序设计"><a href="#程序设计" class="headerlink" title="程序设计"></a>程序设计</h2><p>程序设计从简单的<strong>语言基础</strong>到困难的<strong>算法实现</strong>均有涉及。</p>
<p>语言基础包括：</p>
<ul>
<li>C</li>
<li>C++</li>
<li>Java</li>
<li>C#</li>
<li>fortran</li>
<li>JavaScript</li>
</ul>
<blockquote>
<p>埃拉托斯特尼筛法 (the Sieve of Eratosthenes)</p>
</blockquote>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// Linear Sieve - Generating Prime Table in [1, n]</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">Sieve</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> *prime, <span class="keyword">bool</span> *isPrime)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</div><div class="line">    isPrime[<span class="number">1</span>] = <span class="literal">false</span>;</div><div class="line">    <span class="built_in">memset</span>(isPrime + <span class="number">2</span>, <span class="literal">true</span>, n - <span class="number">2</span>);</div><div class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</div><div class="line">        <span class="keyword">if</span> (isPrime[i]) &#123;</div><div class="line">            prime[cnt++] = i;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cnt; j++) &#123;</div><div class="line">            <span class="keyword">int</span> next = i * prime[j];</div><div class="line">            <span class="keyword">if</span> (next &gt; n) &#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">            isPrime[next] = <span class="literal">false</span>;</div><div class="line">            <span class="keyword">if</span> (i % prime[j] == <span class="number">0</span>) &#123;</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> cnt;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="离散数学"><a href="#离散数学" class="headerlink" title="离散数学"></a>离散数学</h2><p>与以微积分为代表的连续数学相对的，作为计算机科学的数学基础的离散数学：</p>
<p>主要涉及集合论(Set Theory)、数理逻辑(Mathematical Logic)；</p>
<p>延伸出关系理论(Relation Theory)、图论(Graph Theory)、代数学(Algebra)；</p>
<p>更进一步地包含数论(Number Theory)、组合数学(Combinatorial mathematics)、计算模型(computational model)。</p>
<blockquote>
<p>莫比乌斯反演</p>
</blockquote>
<p>$$<br>g(n) =\sum_{d | n}{f(d)} \Leftrightarrow f(n) = \sum_{d|n}{\mu(d)g(\frac{n}{d})}<br>$$</p>
<h1 id="发行产品"><a href="#发行产品" class="headerlink" title="发行产品"></a>发行产品</h1><p>目前有发行部分科目的学业小助手</p>
<ul>
<li>高数小助手</li>
<li>线代小助手</li>
<li>大物小助手</li>
</ul>
]]></content>
    </entry>
    
  
  
</search>
